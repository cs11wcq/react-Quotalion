type Topic @model 

{
  id: ID!
  title: String!
  description: String
  quotes: [TopicQuote] @connection(keyName: "byTopic", fields: ["id"])
  tags: [TopicTag] @connection(keyName: "byTopic", fields: ["id"])
}

type Tag @model
  {
  id: ID!
  tag: String!
  topics: [TopicTag] @connection(keyName: "byTag", fields: ["id"])
  quotes: [Quote] @connection(keyName: "TagQuotes")
  
}

type Quote
  @model
  @key(
    name: "byCreateAtDate"
    fields: ["type", "createdAt"]
    queryField: "getTopicsByCreatedAtDate"
  ) {
  id: ID!
  body: String!
  type: String!
  likeCount: Int!
  tag: Tag @connection(keyName: "TagQuotes")
  topics: [TopicQuote] @connection(keyName: "byQuote", fields: ["id"])
  createdAt: AWSDateTime!
}



type TopicTag 
  @model(queries: null)
  @key(name: "byTopic", fields: ["topicId", "tagId"])
  @key(name: "byTag", fields: ["tagId", "topicId"])
{
  id: ID!
  topicId: ID!
  tagId: ID!
  topic: Topic! @connection(fields: ["topicId"])
  tag: Tag! @connection(fields: ["tagId"])
}

type TopicQuote
  @model(queries: null)
  @key(name: "byTopic", fields: ["topicId", "quoteId"])
  @key(name: "byQuote", fields: ["quoteId", "topicId"]) {
  id: ID!
  topicId: ID!
  quoteId: ID!
  topic: Topic! @connection(fields: ["topicId"])
  quote: Quote! @connection(fields: ["quoteId"])
}
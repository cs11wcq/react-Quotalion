type Topic
  @model
  @auth(
    rules: [
      # allow all authenticated users ability to create posts
      # allow owners ability to update and delete their posts
      { allow: owner }
      # allow all authenticated users to read posts
      { allow: private, provider: iam, operations: [read] }
      # allow all guest users (not authenticated) to read posts
      { allow: public, provider: iam, operations: [read] }
    ]
  ) {
  id: ID!
  title: String!
  description: String
  quotes: [TopicQuote] @connection(keyName: "byTopic", fields: ["id"])
  tags: [TopicTag] @connection(keyName: "byTopic", fields: ["id"])
}

type Tag
  @model
  @auth(
    rules: [
      # allow all authenticated users ability to create posts
      # allow owners ability to update and delete their posts
      { allow: owner }
      # allow all authenticated users to read posts
      { allow: private, provider: iam, operations: [read] }
      # allow all guest users (not authenticated) to read posts
      { allow: public, provider: apiKey, operations: [read] }
    ]
  ) {
  id: ID!
  tag: String!
  topics: [TopicTag] @connection(keyName: "byTag", fields: ["id"])
  quotes: [Quote] @connection(keyName: "TagQuotes")
}

type Quote
  @auth(
    rules: [
      # allow all authenticated users ability to create posts
      # allow owners ability to update and delete their posts
      { allow: owner }
      # allow all authenticated users to read posts
      { allow: private, provider: iam, operations: [read] }
      # allow all guest users (not authenticated) to read posts
    ]
  )
  @model
  @key(
    name: "byCreatedAtDate"
    fields: ["type", "createdAt"]
    queryField: "getTopicsByCreatedAtDate"
  ) 
  @key(
    name: "byTag"
    fields: ["tag", "createdAt"]
    queryField: "getQuotesByTag"
  )
  {
  id: ID!
  body: String!
  type: String!
  likeCount: Int
  imageUrl: String
  tag: Tag @connection(keyName: "TagQuotes")
  topics: [TopicQuote] @connection(keyName: "byQuote", fields: ["id"])
  createdAt: AWSDateTime!
}



type TopicTag
  @auth(
    rules: [
      # allow all authenticated users ability to create posts
      # allow owners ability to update and delete their posts
      { allow: owner }
      # allow all authenticated users to read posts
      { allow: private, provider: iam, operations: [read] }
      # allow all guest users (not authenticated) to read posts
    ]
  )
  @model(queries: null)
  @key(name: "byTopic", fields: ["topicId", "tagId"])
  @key(name: "byTag", fields: ["tagId", "topicId"]) {
  id: ID!
  topicId: ID!
  tagId: ID!
  topic: Topic! @connection(fields: ["topicId"])
  tag: Tag! @connection(fields: ["tagId"])
}

type TopicQuote
  @auth(
    rules: [
      # allow all authenticated users ability to create posts
      # allow owners ability to update and delete their posts
      { allow: owner }
      # allow all authenticated users to read posts
      { allow: private, provider: iam, operations: [read] }
      # allow all guest users (not authenticated) to read posts
    ]
  )
  @model(queries: null)
  @key(name: "byTopic", fields: ["topicId", "quoteId"])
  @key(name: "byQuote", fields: ["quoteId", "topicId"]) {
  id: ID!
  topicId: ID!
  quoteId: ID!
  topic: Topic! @connection(fields: ["topicId"])
  quote: Quote! @connection(fields: ["quoteId"])
}